{
  "name": "magic-scheme",
  "displayName": "Magic Scheme",
  "description": "Scheme language server plugin.",
  "version": "0.0.2",
  "icon": "images/icon_blue.png",
  "engines": {
    "vscode": "^1.92.0"
  },
  "categories": [
    "Programming Languages"
  ],
  "activationEvents": [],
  "main": "./dist/extension.js",
  "publisher": "ufo5260987423",
  "author": {
    "name": "WANG Zheng"
  },
  "bugs": {
    "url": "https://github.com/ufo5260987423/magic-scheme/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/ufo5260987423/magic-scheme.git"
  },
  "homepage": "https://github.com/ufo5260987423/magic-scheme/blob/main/README.md",
  "pricing": "Free",
  "contributes": {
    "snippets": [],
    "menus": {
      "editor/title/context": [
        {
          "when": "resourceLangId == scheme",
          "command": "magic-scheme.runSchemeScript",
          "group": "9_cutcopypaste"
        },
        {
          "when": "resourceLangId == scheme",
          "command": "magic-scheme.runSchemeREPL",
          "group": "9_cutcopypaste"
        }
      ]
    },
    "languages": [
      {
        "id": "scheme",
        "aliases": [
          "Scheme",
          "scheme"
        ],
        "extensions": [
          ".ss",
          ".sps",
          ".scm",
          ".sch",
          ".sls"
        ],
        "configuration": "./package_files/scheme.configuration.json",
        "icon": {
          "dark": "./images/file_dark.svg",
          "light": "./images/file_light.svg"
        }
      }
    ],
    "grammars": [
      {
        "language": "scheme",
        "scopeName": "source.scheme",
        "path": "./package_files/scheme.tmLanguage",
        "embeddedLanguages": {
          "meta.embedded.block.scheme": "scheme"
        }
      }
    ],
    "configurationDefaults": {
      "[scheme]": {
        "editor.insertSpaces": true,
        "editor.tabSize": 2,
        "editor.indentSize": 2,
        "editor.wordSeparators": "`()[];'\","
      }
    },
    "configuration": {
      "title": "Magic Scheme Configuration",
      "properties": {
        "magicScheme.scheme-langserver.enable": {
          "type": "boolean",
          "default": "true",
          "markdownDescription": "Enable scheme-langserver."
        },
        "magicScheme.scheme-langserver.serverPath": {
          "type": "string",
          "default": "scheme-langserver",
          "markdownDescription": "Path to the scheme-langserver executable `scheme-langserver` (for nixos akkupackages.scheme-langserver) or `run`. Can be either an absolute path or relative to the workspace root. Default: `scheme-langserver`, which works if `scheme-langserver` is in your `PATH`."
        },
        "magicScheme.scheme-langserver.logPath": {
          "type": "string",
          "default": "~/scheme-langserver.log",
          "markdownDescription": "Path to the scheme-langserver's log. Can be either an absolute path or relative to the workspace root. Default: `~/.scheme-langserver.log`, which is located on your `$HOME`."
        },
        "magicScheme.scheme-langserver.multiThread": {
          "type": "string",
          "default": "enable",
          "markdownDescription": "Enable/disable multithreads for scheme-langserver. Default: `enable`."
        },
        "magicScheme.scheme-langserver.typeInference": {
          "type": "string",
          "default": "disable",
          "markdownDescription": "Enable/disable type inference for scheme-langserver. Default: `disable`. NOTE: this feature haven't been fully test, be careful!"
        },
        "magicScheme.scheme.path": {
          "type": "string",
          "default": "scheme",
          "markdownDescription": "Path to the Scheme executable `scheme`. Can be either an absolute path or relative to the workspace root. Default: `scheme`, which works if `scheme` is in your `PATH`. Personally, I recommend you with Chez Scheme."
        },
        "magicScheme.scheme.arguments": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "markdownDescription": "Arguments passed to the scheme executable "
        },
        "magicScheme.scheme.REPL.title": {
          "type": "string",
          "default": "REPL ($name)",
          "markdownDescription": "Template string for the title of REPLs. Variable `$name` will get replaced by the file name."
        },
        "magicScheme.scheme.outputTerminal.numberOfOutputTerminals": {
          "type": "string",
          "enum": [
            "one",
            "many"
          ],
          "default": "one",
          "enumDescriptions": [
            "Runs every file in the same output terminal",
            "Runs each file in its own output terminal"
          ]
        },
        "magicScheme.scheme.outputTerminal.sharedOutputTerminalTitle": {
          "type": "string",
          "default": "Scheme Output",
          "markdownDescription": "Specifies the title of the the shared output terminal."
        },
        "magicScheme.scheme.outputTerminal.outputTerminalTitle": {
          "type": "string",
          "default": "Output ($name)",
          "markdownDescription": "Specifies the template string for the title of the file-specific output terminal. Substring `$name` will get replaced by the file name."
        },
        "magicScheme.akku.path": {
          "type": "string",
          "default": "akku",
          "markdownDescription": "Path to the AKKU executable `akku`. Can be either an absolute path or relative to the workspace root. Default: `akku`, which works if `akku` is in your `PATH`."
        }
      }
    },
    "keybindings": [
      {
        "command": "magic-scheme.runSchemeScript",
        "key": "Alt+Enter",
        "when": "resourceLangId == scheme && editorTextFocus"
      },
      {
        "key": "Alt+Shift+Enter",
        "command": "magic-scheme.runSchemeREPL"
      }
    ],
    "commands": [
      {
        "command": "magic-scheme.runSchemeScript",
        "title": "`scheme --script {currentFile}` with Current AKKU Environment"
      },
      {
        "command": "magic-scheme.runSchemeREPL",
        "title": "`scheme {currentFile}` with Current AKKU Environment"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run build-base -- --minify",
    "package": "vsce package -o magic-racket.vsix",
    "build-base": "esbuild ./src/extension.ts --bundle --outfile=out/main.js --external:vscode --format=cjs --platform=node --target=node16",
    "build": "npm run build-base -- --sourcemap",
    "watch": "npm run build-base -- --sourcemap --watch",
    "compile": "tsc -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.7",
    "@types/node": "20.x",
    "@types/shell-quote": "^1.7.5",
    "@types/vscode": "^1.92.0",
    "@typescript-eslint/eslint-plugin": "^7.14.1",
    "@typescript-eslint/parser": "^7.11.0",
    "@vscode/test-cli": "^0.0.9",
    "@vscode/test-electron": "^2.4.0",
    "esbuild": "^0.21.5",
    "eslint": "^8.57.0",
    "npm-run-all": "^4.1.5",
    "typescript": "^5.4.5"
  },
  "dependencies": {
    "shell-quote": "^1.8.0",
    "vscode-languageclient": "^7.0.0"
  }
}
